'-----------------------------------------------------------------------------------------------------------------------
' Four Up: Classic Connect 4 game
' Copyright (c) 2024 Samuel Gomes

' This program uses InForm GUI engine v1.5.3 for QB64-PE
' Fellippe Heitor, (2016 - 2022) - @FellippeHeitor
' Samuel Gomes, (2023 - 2024) - @a740g
' https://github.com/a740g/InForm-PE
'-----------------------------------------------------------------------------------------------------------------------

_DEFINE A-Z AS LONG
OPTION _EXPLICIT
$EXEICON:'./FourUp.ico'
$COLOR:32
$VERSIONINFO:CompanyName='Samuel Gomes'
$VERSIONINFO:FileDescription='Four Up executable'
$VERSIONINFO:InternalName='FourUp'
$VERSIONINFO:LegalCopyright='Copyright (c) 2024 Samuel Gomes'
$VERSIONINFO:LegalTrademarks='All product names, trademarks and registered trademarks are property of their respective owners'
$VERSIONINFO:OriginalFilename='FourUp.exe'
$VERSIONINFO:ProductName='Four Up'
$VERSIONINFO:Web='https://github.com/a740g'
$VERSIONINFO:Comments='https://github.com/a740g'
$VERSIONINFO:FILEVERSION#=8,0,0,0
$VERSIONINFO:PRODUCTVERSION#=8,0,0,0

': Controls' IDs: ------------------------------------------------------------------
DIM SHARED GameMenuExit AS LONG
DIM SHARED HelpMenuAboutFourUp AS LONG
DIM SHARED GameMenuUndo AS LONG
DIM SHARED PlayerScoreLB AS LONG
DIM SHARED PlayerLastMoveLB AS LONG
DIM SHARED PlayerTimeLB AS LONG
DIM SHARED ComputerScoreLB AS LONG
DIM SHARED ComputerLastMoveLB AS LONG
DIM SHARED ComputerTimeLB AS LONG
DIM SHARED LogListBox AS LONG
DIM SHARED BT1 AS LONG
DIM SHARED Frame4 AS LONG
DIM SHARED BT2 AS LONG
DIM SHARED BT3 AS LONG
DIM SHARED BT4 AS LONG
DIM SHARED BT5 AS LONG
DIM SHARED BT6 AS LONG
DIM SHARED BT7 AS LONG
DIM SHARED ComputerX AS LONG
DIM SHARED ScoreLB2 AS LONG
DIM SHARED LastMoveLB2 AS LONG
DIM SHARED TimeLB2 AS LONG
DIM SHARED PlayerO AS LONG
DIM SHARED ScoreLB AS LONG
DIM SHARED LastMoveLB AS LONG
DIM SHARED TimeLB AS LONG
DIM SHARED P1PB_0 AS LONG
DIM SHARED P2PB_0 AS LONG
DIM SHARED P3PB_0 AS LONG
DIM SHARED P4PB_0 AS LONG
DIM SHARED P5PB_0 AS LONG
DIM SHARED P1PB_1 AS LONG
DIM SHARED P1PB_2 AS LONG
DIM SHARED P1PB_3 AS LONG
DIM SHARED P1PB_4 AS LONG
DIM SHARED P1PB_5 AS LONG
DIM SHARED P1PB_6 AS LONG
DIM SHARED P2PB_1 AS LONG
DIM SHARED P2PB_2 AS LONG
DIM SHARED P2PB_3 AS LONG
DIM SHARED P2PB_4 AS LONG
DIM SHARED P2PB_5 AS LONG
DIM SHARED P2PB_6 AS LONG
DIM SHARED P3PB_1 AS LONG
DIM SHARED P3PB_2 AS LONG
DIM SHARED P3PB_3 AS LONG
DIM SHARED P3PB_4 AS LONG
DIM SHARED P3PB_5 AS LONG
DIM SHARED P3PB_6 AS LONG
DIM SHARED P4PB_1 AS LONG
DIM SHARED P4PB_2 AS LONG
DIM SHARED P4PB_3 AS LONG
DIM SHARED P4PB_4 AS LONG
DIM SHARED P4PB_5 AS LONG
DIM SHARED P4PB_6 AS LONG
DIM SHARED P5PB_1 AS LONG
DIM SHARED P5PB_2 AS LONG
DIM SHARED P5PB_3 AS LONG
DIM SHARED P5PB_4 AS LONG
DIM SHARED P5PB_5 AS LONG
DIM SHARED P5PB_6 AS LONG
DIM SHARED Frame1 AS LONG
DIM SHARED P0PB_0 AS LONG
DIM SHARED P0PB_1 AS LONG
DIM SHARED P0PB_2 AS LONG
DIM SHARED P0PB_3 AS LONG
DIM SHARED P0PB_4 AS LONG
DIM SHARED P0PB_5 AS LONG
DIM SHARED P0PB_6 AS LONG
DIM SHARED FourUp AS LONG
DIM SHARED GameMenu AS LONG
DIM SHARED HelpMenu AS LONG
DIM SHARED GameMenuNew AS LONG
DIM SHARED GameMenuDifficulty AS LONG
DIM SHARED HelpMenuHowTo AS LONG
DIM SHARED HelpMenuShowAIThinking AS LONG
DIM SHARED HelpMenuGiveMeAHint AS LONG

': Global variables: ---------------------------------------------------------------
DIM SHARED AS SINGLE PlayerTime, ComputerTime ' these keep track of the time
DIM SHARED GameBusy AS _BYTE ' all UI input and AI play will be disabled if this is true

_ALLOWFULLSCREEN OFF

': External modules: ---------------------------------------------------------------
'$INCLUDE:'./include/InForm/InFormCommon.bi'
'$INCLUDE:'FourUpEngine.bi'
'$INCLUDE:'./include/InForm/InForm.bi'
'$INCLUDE:'FourUp.frm'
'$INCLUDE:'./include/InForm/InForm.ui'
'$INCLUDE:'FourUpEngine.bas'

': Custom procedures: --------------------------------------------------------------
' Draws a filled circle
' Adapted from the QB64-PE forums. Not sure who to credit
' cx, cy - circle center x, y
' r - circle radius
' c - color
SUB DrawFilledCircle (cx AS LONG, cy AS LONG, r AS LONG, c AS _UNSIGNED LONG)
    $CHECKING:OFF
    DIM AS LONG radius, radiusError, x, y

    radius = ABS(r)
    radiusError = -radius
    x = radius ' Y = 0

    IF radius = 0 THEN
        PSET (cx, cy), c
        EXIT SUB
    END IF

    LINE (cx - x, cy)-(cx + x, cy), c, BF

    WHILE x > y
        radiusError = radiusError + y * 2 + 1

        IF radiusError >= 0 THEN
            IF x <> y + 1 THEN
                LINE (cx - y, cy - x)-(cx + y, cy - x), c, BF
                LINE (cx - y, cy + x)-(cx + y, cy + x), c, BF
            END IF
            x = x - 1
            radiusError = radiusError - x * 2
        END IF

        y = y + 1

        LINE (cx - x, cy - y)-(cx + x, cy - y), c, BF
        LINE (cx - x, cy + y)-(cx + x, cy + y), c, BF
    WEND
    $CHECKING:ON
END SUB

' Draws all checkers on the game board
' Most of this function was generated programatically using:
'#include <cstdio>

'int main() {
'    for (int y = 0; y < 6; y++) {
'        for (int x = 0; x < 7; x++) {
'            printf("\nBeginDraw P%iPB_%i\n", y, x);
'            printf("Select Case GameBoard(%i, %i)\n", x, y);
'            printf("    Case GAME_BOARD_PLAYER_O_WIN\n");
'            printf("        DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR\n");
'            printf("        Circle (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR\n");
'            printf("        Circle (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR\n");
'            printf("        Circle (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR\n");
'            printf("        Circle (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR\n\n");
'            printf("    Case GAME_BOARD_PLAYER_X_WIN\n");
'            printf("        DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR\n");
'            printf("        Circle (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR\n");
'            printf("        Circle (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR\n");
'            printf("        Circle (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR\n");
'            printf("        Circle (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR\n\n");
'            printf("    Case GAME_BOARD_PLAYER_O\n");
'            printf("        DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR\n\n");
'            printf("    Case GAME_BOARD_PLAYER_X\n");
'            printf("        DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR\n\n");
'            printf("    Case Else\n");
'            printf("    Cls , CHECKER_CLEAR_COLOR\n", x, y);
'            printf("End Select\n");
'            printf("EndDraw P%iPB_%i\n", y, x);
'        }
'    }

'    return 0;
'}
SUB DrawGameBoard
    CONST CHECKER_POS_X = 16
    CONST CHECKER_POS_Y = CHECKER_POS_X
    CONST CHECKER_RADIUS = CHECKER_POS_X - 2
    CONST CHECKER_WIN_RADIUS = CHECKER_RADIUS \ 2
    CONST CHECKER_O_COLOR = Red
    CONST CHECKER_X_COLOR = Yellow
    CONST CHECKER_O_WIN_COLOR = White
    CONST CHECKER_X_WIN_COLOR = Black
    CONST CHECKER_CLEAR_COLOR = Blue

    SHARED GameBoard() AS _UNSIGNED _BYTE

    BeginDraw P0PB_0
    SELECT CASE GameBoard(0, 0)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P0PB_0

    BeginDraw P0PB_1
    SELECT CASE GameBoard(1, 0)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P0PB_1

    BeginDraw P0PB_2
    SELECT CASE GameBoard(2, 0)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P0PB_2

    BeginDraw P0PB_3
    SELECT CASE GameBoard(3, 0)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P0PB_3

    BeginDraw P0PB_4
    SELECT CASE GameBoard(4, 0)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P0PB_4

    BeginDraw P0PB_5
    SELECT CASE GameBoard(5, 0)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P0PB_5

    BeginDraw P0PB_6
    SELECT CASE GameBoard(6, 0)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P0PB_6

    BeginDraw P1PB_0
    SELECT CASE GameBoard(0, 1)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P1PB_0

    BeginDraw P1PB_1
    SELECT CASE GameBoard(1, 1)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P1PB_1

    BeginDraw P1PB_2
    SELECT CASE GameBoard(2, 1)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P1PB_2

    BeginDraw P1PB_3
    SELECT CASE GameBoard(3, 1)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P1PB_3

    BeginDraw P1PB_4
    SELECT CASE GameBoard(4, 1)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P1PB_4

    BeginDraw P1PB_5
    SELECT CASE GameBoard(5, 1)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P1PB_5

    BeginDraw P1PB_6
    SELECT CASE GameBoard(6, 1)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P1PB_6

    BeginDraw P2PB_0
    SELECT CASE GameBoard(0, 2)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P2PB_0

    BeginDraw P2PB_1
    SELECT CASE GameBoard(1, 2)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P2PB_1

    BeginDraw P2PB_2
    SELECT CASE GameBoard(2, 2)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P2PB_2

    BeginDraw P2PB_3
    SELECT CASE GameBoard(3, 2)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P2PB_3

    BeginDraw P2PB_4
    SELECT CASE GameBoard(4, 2)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P2PB_4

    BeginDraw P2PB_5
    SELECT CASE GameBoard(5, 2)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P2PB_5

    BeginDraw P2PB_6
    SELECT CASE GameBoard(6, 2)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P2PB_6

    BeginDraw P3PB_0
    SELECT CASE GameBoard(0, 3)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P3PB_0

    BeginDraw P3PB_1
    SELECT CASE GameBoard(1, 3)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P3PB_1

    BeginDraw P3PB_2
    SELECT CASE GameBoard(2, 3)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P3PB_2

    BeginDraw P3PB_3
    SELECT CASE GameBoard(3, 3)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P3PB_3

    BeginDraw P3PB_4
    SELECT CASE GameBoard(4, 3)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P3PB_4

    BeginDraw P3PB_5
    SELECT CASE GameBoard(5, 3)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P3PB_5

    BeginDraw P3PB_6
    SELECT CASE GameBoard(6, 3)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P3PB_6

    BeginDraw P4PB_0
    SELECT CASE GameBoard(0, 4)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P4PB_0

    BeginDraw P4PB_1
    SELECT CASE GameBoard(1, 4)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P4PB_1

    BeginDraw P4PB_2
    SELECT CASE GameBoard(2, 4)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P4PB_2

    BeginDraw P4PB_3
    SELECT CASE GameBoard(3, 4)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P4PB_3

    BeginDraw P4PB_4
    SELECT CASE GameBoard(4, 4)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P4PB_4

    BeginDraw P4PB_5
    SELECT CASE GameBoard(5, 4)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P4PB_5

    BeginDraw P4PB_6
    SELECT CASE GameBoard(6, 4)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P4PB_6

    BeginDraw P5PB_0
    SELECT CASE GameBoard(0, 5)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P5PB_0

    BeginDraw P5PB_1
    SELECT CASE GameBoard(1, 5)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P5PB_1

    BeginDraw P5PB_2
    SELECT CASE GameBoard(2, 5)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P5PB_2

    BeginDraw P5PB_3
    SELECT CASE GameBoard(3, 5)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P5PB_3

    BeginDraw P5PB_4
    SELECT CASE GameBoard(4, 5)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P5PB_4

    BeginDraw P5PB_5
    SELECT CASE GameBoard(5, 5)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P5PB_5

    BeginDraw P5PB_6
    SELECT CASE GameBoard(6, 5)
        CASE GAME_BOARD_PLAYER_O_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_O_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_O_WIN_COLOR

        CASE GAME_BOARD_PLAYER_X_WIN
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 1, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 2, CHECKER_X_WIN_COLOR
            CIRCLE (CHECKER_POS_X, CHECKER_POS_Y), CHECKER_WIN_RADIUS + 3, CHECKER_X_WIN_COLOR

        CASE GAME_BOARD_PLAYER_O
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_O_COLOR

        CASE GAME_BOARD_PLAYER_X
            DrawFilledCircle CHECKER_POS_X, CHECKER_POS_Y, CHECKER_RADIUS, CHECKER_X_COLOR

        CASE ELSE
            CLS , CHECKER_CLEAR_COLOR
    END SELECT
    EndDraw P5PB_6
END SUB

' Updates all buttons, labels and the game board when needed
SUB UpdateUI
    ' Disable housefull columns
    Control(BT1).Disabled = NOT GameIsValidMove(0) OR GameBusy
    Control(BT2).Disabled = NOT GameIsValidMove(1) OR GameBusy
    Control(BT3).Disabled = NOT GameIsValidMove(2) OR GameBusy
    Control(BT4).Disabled = NOT GameIsValidMove(3) OR GameBusy
    Control(BT5).Disabled = NOT GameIsValidMove(4) OR GameBusy
    Control(BT6).Disabled = NOT GameIsValidMove(5) OR GameBusy
    Control(BT7).Disabled = NOT GameIsValidMove(6) OR GameBusy

    ' Draw the game board
    IF Control(HelpMenuShowAIThinking).Value OR NOT GameBusy THEN DrawGameBoard

    ' Update the player and AI times
    Caption(PlayerTimeLB) = RIGHT$("0" + LTRIM$(STR$(INT(PlayerTime / 3600))), 2) + ":" + RIGHT$("0" + LTRIM$(STR$(INT((PlayerTime MOD 3600) / 60))), 2) + ":" + RIGHT$("0" + LTRIM$(STR$(PlayerTime MOD 60)), 2)
    Caption(ComputerTimeLB) = RIGHT$("0" + LTRIM$(STR$(INT(ComputerTime / 3600))), 2) + ":" + RIGHT$("0" + LTRIM$(STR$(INT((ComputerTime MOD 3600) / 60))), 2) + ":" + RIGHT$("0" + LTRIM$(STR$(ComputerTime MOD 60)), 2)

    ' Update the log pane
    DIM engineLog AS STRING: engineLog = GameGetEngineLog
    IF LEN(engineLog) > 0 THEN AddItem LogListBox, engineLog
END SUB

' Exits the game after checking with the user
SUB OnExit
    IF NOT GameBoardIsFull AND GameGetWinner(FALSE) = GAME_BOARD_PLAYER_NONE AND GameGetMoves > 0 THEN
        IF MessageBox("A game is in progress.\nAre you sure you want to quit now?", Caption(FourUp), MsgBox_YesNo OR MsgBox_Question) = MsgBox_No THEN
            IF __UI_UnloadSignal THEN __UI_UnloadSignal = FALSE
            EXIT SUB
        END IF
    END IF

    IF NOT __UI_UnloadSignal THEN SYSTEM
END SUB

' Starts a new game. If a game is active then it checks with the user before resetting everything
SUB OnNewGame
    IF NOT GameBoardIsFull AND GameGetWinner(FALSE) = GAME_BOARD_PLAYER_NONE AND GameGetMoves > 0 THEN
        IF MessageBox("A game is in progress.\nAre you sure you want to end this game?", Caption(FourUp), MsgBox_YesNo OR MsgBox_Question) = MsgBox_No THEN
            EXIT SUB
        END IF
    END IF

    GameReset
    PlayerTime = 0!
    ComputerTime = 0!
    Caption(PlayerLastMoveLB) = "0"
    Caption(ComputerLastMoveLB) = "0"
    ResetList LogListBox
    UpdateUI
END SUB

' This should be called when a button is clicked
SUB OnButtonClick (id AS LONG)
    ' Don't allow reentry by the user if we are already processing a player move
    IF GameBusy OR GameGetPlayer = GAME_BOARD_PLAYER_X THEN EXIT SUB

    ' Set the busy flag to true until the player finishes playing
    GameBusy = TRUE

    DIM i AS _UNSIGNED _BYTE
    SELECT CASE id
        CASE BT1: i = 0
        CASE BT2: i = 1
        CASE BT3: i = 2
        CASE BT4: i = 3
        CASE BT5: i = 4
        CASE BT6: i = 5
        CASE BT7: i = 6
        CASE ELSE: ERROR ERROR_INTERNAL_ERROR
    END SELECT

    ' Player's move
    IF GamePlayMove(i) THEN
        Caption(PlayerLastMoveLB) = LTRIM$(STR$(i + 1))

        ' Check if the player won
        DIM winner AS _UNSIGNED _BYTE: winner = GameGetWinner(TRUE)

        ' We call DrawBoard here to draw the winning positions
        DrawGameBoard

        IF winner = GAME_BOARD_PLAYER_O THEN
            AddItem LogListBox, "You win!"
            Caption(PlayerScoreLB) = LTRIM$(STR$(VAL(Caption(PlayerScoreLB)) + 1))
            MessageBox "You win!", Caption(FourUp), MsgBox_Information
            OnNewGame
        ELSEIF GameBoardIsFull THEN
            AddItem LogListBox, "It's a draw!"
            MessageBox "It's a draw!", Caption(FourUp), MsgBox_Information
            OnNewGame
        END IF

        ' Computer's move
        AddItem LogListBox, "Thinking..."
        i = GameSolverGetBestMove(GameGetPlayer)
        IF GamePlayMove(i) THEN
            Caption(ComputerLastMoveLB) = LTRIM$(STR$(i + 1))

            ' Check if the computer won
            winner = GameGetWinner(TRUE)

            ' We call DrawBoard here to draw the winning positions
            DrawGameBoard

            IF winner = GAME_BOARD_PLAYER_X THEN
                AddItem LogListBox, "I win!"
                Caption(ComputerScoreLB) = LTRIM$(STR$(VAL(Caption(ComputerScoreLB)) + 1))
                MessageBox "I win!", Caption(FourUp), MsgBox_Information
                OnNewGame
            ELSEIF GameBoardIsFull THEN
                AddItem LogListBox, "It's a draw!"
                MessageBox "It's a draw!", Caption(FourUp), MsgBox_Information
                OnNewGame
            END IF
        ELSE
            ERROR ERROR_INTERNAL_ERROR
        END IF
    END IF

    GameBusy = FALSE
END SUB

': Event procedures: ---------------------------------------------------------------
SUB __UI_BeforeInit
    ' This will create a 7 x 6 grid game with the default solver search depth
    GameInitialize 7, 6, 0
END SUB

SUB __UI_OnLoad
    OnNewGame
    Caption(ComputerScoreLB) = "0"
    Caption(PlayerScoreLB) = "0"
END SUB

SUB __UI_BeforeUpdateDisplay
    'This event occurs at approximately 60 frames per second.
    'You can change the update frequency by calling SetFrameRate DesiredRate%

    ' Update the UI, board and stuff
    UpdateUI

    IF GameGetPlayer = GAME_BOARD_PLAYER_X THEN
        ' Tick AI time only if game has started
        IF GameGetMoves > 0 AND GameBusy THEN ComputerTime = ComputerTime + __UI_FrameRate
    ELSE
        ' Tick player time only if game has started
        IF GameGetMoves > 0 AND NOT GameBusy THEN PlayerTime = PlayerTime + __UI_FrameRate
    END IF
END SUB

SUB __UI_BeforeUnload
    'If you set __UI_UnloadSignal = False here you can
    'cancel the user's request to close.

    OnExit
END SUB

SUB __UI_Click (id AS LONG)
    SHARED Game AS GameType

    SELECT CASE id
        CASE GameMenuExit
            OnExit

        CASE HelpMenuAboutFourUp
            MessageBox "Four Up: Classic Connect 4 game\n\nCopyright (c) 2024 Samuel Gomes\n\nhttps://github.com/a740g/", Caption(FourUp) + " - About", MsgBox_Information

        CASE GameMenuUndo
            IF NOT GameBusy AND GameGetPlayer = GAME_BOARD_PLAYER_O AND GameGetMoves > 1 THEN
                GameBusy = TRUE
                GameUndoMove ' undo AI move
                GameUndoMove ' undo player move
                GameBusy = FALSE
            END IF

        CASE PlayerScoreLB

        CASE PlayerLastMoveLB

        CASE PlayerTimeLB

        CASE ComputerScoreLB

        CASE ComputerLastMoveLB

        CASE ComputerTimeLB

        CASE LogListBox

        CASE BT1
            OnButtonClick id

        CASE Frame4

        CASE BT2
            OnButtonClick id

        CASE BT3
            OnButtonClick id

        CASE BT4
            OnButtonClick id

        CASE BT5
            OnButtonClick id

        CASE BT6
            OnButtonClick id

        CASE BT7
            OnButtonClick id

        CASE ComputerX

        CASE ScoreLB2

        CASE LastMoveLB2

        CASE TimeLB2

        CASE PlayerO

        CASE ScoreLB

        CASE LastMoveLB

        CASE TimeLB

        CASE P1PB_0

        CASE P2PB_0

        CASE P3PB_0

        CASE P4PB_0

        CASE P5PB_0

        CASE P1PB_1

        CASE P1PB_2

        CASE P1PB_3

        CASE P1PB_4

        CASE P1PB_5

        CASE P1PB_6

        CASE P2PB_1

        CASE P2PB_2

        CASE P2PB_3

        CASE P2PB_4

        CASE P2PB_5

        CASE P2PB_6

        CASE P3PB_1

        CASE P3PB_2

        CASE P3PB_3

        CASE P3PB_4

        CASE P3PB_5

        CASE P3PB_6

        CASE P4PB_1

        CASE P4PB_2

        CASE P4PB_3

        CASE P4PB_4

        CASE P4PB_5

        CASE P4PB_6

        CASE P5PB_1

        CASE P5PB_2

        CASE P5PB_3

        CASE P5PB_4

        CASE P5PB_5

        CASE P5PB_6

        CASE Frame1

        CASE P0PB_0

        CASE P0PB_1

        CASE P0PB_2

        CASE P0PB_3

        CASE P0PB_4

        CASE P0PB_5

        CASE P0PB_6

        CASE FourUp

        CASE GameMenu

        CASE HelpMenu

        CASE GameMenuNew
            OnNewGame

        CASE GameMenuDifficulty
            _DELAY 0.2 ' delay a bit so that the interface can redraw before the inputbox kicks in
            DIM depthStr AS STRING: depthStr = _INPUTBOX$(Caption(FourUp) + " - Difficulty", "Enter a value between 0 and 256:", LTRIM$(STR$(GameSolverGetMaxDepth)))
            DIM depth AS LONG: depth = VAL(depthStr)
            IF depth > 0 AND depth < 256 THEN
                IF depth > 10 THEN
                    IF MessageBox("Difficulty level" + STR$(depth) + " may slow down the game.\n\nAre you sure?", Caption(FourUp) + " - Difficulty", MsgBox_YesNo OR MsgBox_Question) = MsgBox_Yes THEN
                        GameSolverSetMaxDepth depth
                    END IF
                ELSE
                    GameSolverSetMaxDepth depth
                END IF
            ELSEIF LEN(depthStr) > 0 THEN
                MessageBox "Invalid value: " + depthStr, Caption(FourUp) + " - Difficulty", MsgBox_Exclamation
            END IF

        CASE HelpMenuHowTo
            MessageBox "Four Up (also known as Connect Four, Plot Four, Find Four, Captain's Mistress, Four in a Row, Drop Four, and Gravitrips in the Soviet Union) is a two-player connection board game, in which the players choose a color and then take turns dropping colored discs into a seven-column, six-row vertically suspended grid. The pieces fall straight down, occupying the lowest available space within the column. The objective of the game is to be the first to form a horizontal, vertical, or diagonal line of four of one's own discs.", Caption(FourUp) + " - How To", MsgBox_Information

        CASE HelpMenuShowAIThinking
            Control(HelpMenuShowAIThinking).Value = NOT Control(HelpMenuShowAIThinking).Value

        CASE HelpMenuGiveMeAHint
            IF NOT GameBusy THEN
                GameBusy = TRUE
                MessageBox "Try column" + STR$(GameSolverGetBestMove(GameGetPlayer) + 1) + ".", Caption(FourUp) + " - Hint", MsgBox_Information
                GameBusy = FALSE
            END IF

    END SELECT
END SUB

SUB __UI_MouseEnter (id AS LONG)
    SELECT CASE id
        CASE GameMenuExit

        CASE HelpMenuAboutFourUp

        CASE GameMenuUndo

        CASE PlayerScoreLB

        CASE PlayerLastMoveLB

        CASE PlayerTimeLB

        CASE ComputerScoreLB

        CASE ComputerLastMoveLB

        CASE ComputerTimeLB

        CASE LogListBox

        CASE BT1

        CASE Frame4

        CASE BT2

        CASE BT3

        CASE BT4

        CASE BT5

        CASE BT6

        CASE BT7

        CASE ComputerX

        CASE ScoreLB2

        CASE LastMoveLB2

        CASE TimeLB2

        CASE PlayerO

        CASE ScoreLB

        CASE LastMoveLB

        CASE TimeLB

        CASE P1PB_0

        CASE P2PB_0

        CASE P3PB_0

        CASE P4PB_0

        CASE P5PB_0

        CASE P1PB_1

        CASE P1PB_2

        CASE P1PB_3

        CASE P1PB_4

        CASE P1PB_5

        CASE P1PB_6

        CASE P2PB_1

        CASE P2PB_2

        CASE P2PB_3

        CASE P2PB_4

        CASE P2PB_5

        CASE P2PB_6

        CASE P3PB_1

        CASE P3PB_2

        CASE P3PB_3

        CASE P3PB_4

        CASE P3PB_5

        CASE P3PB_6

        CASE P4PB_1

        CASE P4PB_2

        CASE P4PB_3

        CASE P4PB_4

        CASE P4PB_5

        CASE P4PB_6

        CASE P5PB_1

        CASE P5PB_2

        CASE P5PB_3

        CASE P5PB_4

        CASE P5PB_5

        CASE P5PB_6

        CASE Frame1

        CASE P0PB_0

        CASE P0PB_1

        CASE P0PB_2

        CASE P0PB_3

        CASE P0PB_4

        CASE P0PB_5

        CASE P0PB_6

        CASE FourUp

        CASE GameMenu

        CASE HelpMenu

        CASE GameMenuNew

        CASE GameMenuDifficulty

        CASE HelpMenuHowTo

        CASE HelpMenuShowAIThinking

        CASE HelpMenuGiveMeAHint

    END SELECT
END SUB

SUB __UI_MouseLeave (id AS LONG)
    SELECT CASE id
        CASE GameMenuExit

        CASE HelpMenuAboutFourUp

        CASE GameMenuUndo

        CASE PlayerScoreLB

        CASE PlayerLastMoveLB

        CASE PlayerTimeLB

        CASE ComputerScoreLB

        CASE ComputerLastMoveLB

        CASE ComputerTimeLB

        CASE LogListBox

        CASE BT1

        CASE Frame4

        CASE BT2

        CASE BT3

        CASE BT4

        CASE BT5

        CASE BT6

        CASE BT7

        CASE ComputerX

        CASE ScoreLB2

        CASE LastMoveLB2

        CASE TimeLB2

        CASE PlayerO

        CASE ScoreLB

        CASE LastMoveLB

        CASE TimeLB

        CASE P1PB_0

        CASE P2PB_0

        CASE P3PB_0

        CASE P4PB_0

        CASE P5PB_0

        CASE P1PB_1

        CASE P1PB_2

        CASE P1PB_3

        CASE P1PB_4

        CASE P1PB_5

        CASE P1PB_6

        CASE P2PB_1

        CASE P2PB_2

        CASE P2PB_3

        CASE P2PB_4

        CASE P2PB_5

        CASE P2PB_6

        CASE P3PB_1

        CASE P3PB_2

        CASE P3PB_3

        CASE P3PB_4

        CASE P3PB_5

        CASE P3PB_6

        CASE P4PB_1

        CASE P4PB_2

        CASE P4PB_3

        CASE P4PB_4

        CASE P4PB_5

        CASE P4PB_6

        CASE P5PB_1

        CASE P5PB_2

        CASE P5PB_3

        CASE P5PB_4

        CASE P5PB_5

        CASE P5PB_6

        CASE Frame1

        CASE P0PB_0

        CASE P0PB_1

        CASE P0PB_2

        CASE P0PB_3

        CASE P0PB_4

        CASE P0PB_5

        CASE P0PB_6

        CASE FourUp

        CASE GameMenu

        CASE HelpMenu

        CASE GameMenuNew

        CASE GameMenuDifficulty

        CASE HelpMenuHowTo

        CASE HelpMenuShowAIThinking

        CASE HelpMenuGiveMeAHint

    END SELECT
END SUB

SUB __UI_FocusIn (id AS LONG)
    SELECT CASE id
        CASE LogListBox

        CASE BT1

        CASE BT2

        CASE BT3

        CASE BT4

        CASE BT5

        CASE BT6

        CASE BT7

    END SELECT
END SUB

SUB __UI_FocusOut (id AS LONG)
    'This event occurs right before a control loses focus.
    'To prevent a control from losing focus, set __UI_KeepFocus = True below.
    SELECT CASE id
        CASE LogListBox

        CASE BT1

        CASE BT2

        CASE BT3

        CASE BT4

        CASE BT5

        CASE BT6

        CASE BT7

    END SELECT
END SUB

SUB __UI_MouseDown (id AS LONG)
    SELECT CASE id
        CASE GameMenuExit

        CASE HelpMenuAboutFourUp

        CASE GameMenuUndo

        CASE PlayerScoreLB

        CASE PlayerLastMoveLB

        CASE PlayerTimeLB

        CASE ComputerScoreLB

        CASE ComputerLastMoveLB

        CASE ComputerTimeLB

        CASE LogListBox

        CASE BT1

        CASE Frame4

        CASE BT2

        CASE BT3

        CASE BT4

        CASE BT5

        CASE BT6

        CASE BT7

        CASE ComputerX

        CASE ScoreLB2

        CASE LastMoveLB2

        CASE TimeLB2

        CASE PlayerO

        CASE ScoreLB

        CASE LastMoveLB

        CASE TimeLB

        CASE P1PB_0

        CASE P2PB_0

        CASE P3PB_0

        CASE P4PB_0

        CASE P5PB_0

        CASE P1PB_1

        CASE P1PB_2

        CASE P1PB_3

        CASE P1PB_4

        CASE P1PB_5

        CASE P1PB_6

        CASE P2PB_1

        CASE P2PB_2

        CASE P2PB_3

        CASE P2PB_4

        CASE P2PB_5

        CASE P2PB_6

        CASE P3PB_1

        CASE P3PB_2

        CASE P3PB_3

        CASE P3PB_4

        CASE P3PB_5

        CASE P3PB_6

        CASE P4PB_1

        CASE P4PB_2

        CASE P4PB_3

        CASE P4PB_4

        CASE P4PB_5

        CASE P4PB_6

        CASE P5PB_1

        CASE P5PB_2

        CASE P5PB_3

        CASE P5PB_4

        CASE P5PB_5

        CASE P5PB_6

        CASE Frame1

        CASE P0PB_0

        CASE P0PB_1

        CASE P0PB_2

        CASE P0PB_3

        CASE P0PB_4

        CASE P0PB_5

        CASE P0PB_6

        CASE FourUp

        CASE GameMenu

        CASE HelpMenu

        CASE GameMenuNew

        CASE GameMenuDifficulty

        CASE HelpMenuHowTo

        CASE HelpMenuShowAIThinking

        CASE HelpMenuGiveMeAHint

    END SELECT
END SUB

SUB __UI_MouseUp (id AS LONG)
    SELECT CASE id
        CASE GameMenuExit

        CASE HelpMenuAboutFourUp

        CASE GameMenuUndo

        CASE PlayerScoreLB

        CASE PlayerLastMoveLB

        CASE PlayerTimeLB

        CASE ComputerScoreLB

        CASE ComputerLastMoveLB

        CASE ComputerTimeLB

        CASE LogListBox

        CASE BT1

        CASE Frame4

        CASE BT2

        CASE BT3

        CASE BT4

        CASE BT5

        CASE BT6

        CASE BT7

        CASE ComputerX

        CASE ScoreLB2

        CASE LastMoveLB2

        CASE TimeLB2

        CASE PlayerO

        CASE ScoreLB

        CASE LastMoveLB

        CASE TimeLB

        CASE P1PB_0

        CASE P2PB_0

        CASE P3PB_0

        CASE P4PB_0

        CASE P5PB_0

        CASE P1PB_1

        CASE P1PB_2

        CASE P1PB_3

        CASE P1PB_4

        CASE P1PB_5

        CASE P1PB_6

        CASE P2PB_1

        CASE P2PB_2

        CASE P2PB_3

        CASE P2PB_4

        CASE P2PB_5

        CASE P2PB_6

        CASE P3PB_1

        CASE P3PB_2

        CASE P3PB_3

        CASE P3PB_4

        CASE P3PB_5

        CASE P3PB_6

        CASE P4PB_1

        CASE P4PB_2

        CASE P4PB_3

        CASE P4PB_4

        CASE P4PB_5

        CASE P4PB_6

        CASE P5PB_1

        CASE P5PB_2

        CASE P5PB_3

        CASE P5PB_4

        CASE P5PB_5

        CASE P5PB_6

        CASE Frame1

        CASE P0PB_0

        CASE P0PB_1

        CASE P0PB_2

        CASE P0PB_3

        CASE P0PB_4

        CASE P0PB_5

        CASE P0PB_6

        CASE FourUp

        CASE GameMenu

        CASE HelpMenu

        CASE GameMenuNew

        CASE GameMenuDifficulty

        CASE HelpMenuHowTo

        CASE HelpMenuShowAIThinking

        CASE HelpMenuGiveMeAHint

    END SELECT
END SUB

SUB __UI_KeyPress (id AS LONG)
    'When this event is fired, __UI_KeyHit will contain the code of the key hit.
    'You can change it and even cancel it by making it = 0

    ' Convert keypress 1 - 7 to BT0 - BT6 clicks
    ' This will only work when the focus is on any button or listbox
    ' Oh well! Something is better than nothing!
    SELECT CASE __UI_KeyHit
        CASE 49
            SetFocus BT1
            OnButtonClick BT1

        CASE 50
            SetFocus BT2
            OnButtonClick BT2

        CASE 51
            SetFocus BT3
            OnButtonClick BT3

        CASE 52
            SetFocus BT4
            OnButtonClick BT4

        CASE 53
            SetFocus BT5
            OnButtonClick BT5

        CASE 54
            SetFocus BT6
            OnButtonClick BT6

        CASE 55
            SetFocus BT7
            OnButtonClick BT7
    END SELECT

    EXIT SUB ' ignore whatever is below

    ' We'll leave this stuff here to avoid warnings
    SELECT CASE id
        CASE LogListBox

        CASE BT1

        CASE BT2

        CASE BT3

        CASE BT4

        CASE BT5

        CASE BT6

        CASE BT7

    END SELECT
END SUB

SUB __UI_TextChanged (id AS LONG)
    SELECT CASE id
        CASE ELSE
    END SELECT
END SUB

SUB __UI_ValueChanged (id AS LONG)
    SELECT CASE id
        CASE LogListBox

    END SELECT
END SUB

SUB __UI_FormResized

END SUB
